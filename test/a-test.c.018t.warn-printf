
;; Function main (main, funcdef_no=0, decl_uid=2344, cgraph_uid=1, symbol_order=0)

test.c:7: printf: objsize = 9223372036854775807, fmtstr = "%d
"
  Directive 1 at offset 0: "%d"
    Result: 1, 1, 11, 11 (1, 1, 11, 11)
  Directive 2 at offset 2: "
", length = 1
    Result: 1, 1, 1, 1 (2, 2, 12, 12)
  Directive 3 at offset 3: "", length = 1
test.c:23: printf: objsize = 9223372036854775807, fmtstr = "%d, %s
"
  Directive 1 at offset 0: "%d"
    Result: 1, 1, 1, 1 (1, 1, 1, 1)
  Directive 2 at offset 2: ", ", length = 2
    Result: 2, 2, 2, 2 (3, 3, 3, 3)
  Directive 3 at offset 4: "%s"
    Result: 4, 4, 4, 4 (7, 7, 7, 7)
  Directive 4 at offset 6: "
", length = 1
    Result: 1, 1, 1, 1 (8, 8, 8, 8)
  Directive 5 at offset 7: "", length = 1
test.c:11: printf: objsize = 9223372036854775807, fmtstr = "iter %d
"
  Directive 1 at offset 0: "iter ", length = 5
    Result: 5, 5, 5, 5 (5, 5, 5, 5)
  Directive 2 at offset 5: "%d"
    Result: 1, 1, 11, 11 (6, 6, 16, 16)
  Directive 3 at offset 7: "
", length = 1
    Result: 1, 1, 1, 1 (7, 7, 17, 17)
  Directive 4 at offset 8: "", length = 1
int main ()
{
  int i;
  int integer;
  int D.2359;

  <bb 2> :
  integer = 0;
  printf ("%d\n", integer);
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  printf ("iter %d\n", i);
  i = i + 1;

  <bb 4> :
  if (i < integer)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (i <= integer)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  integer = integer | 10;
  integer = integer & 2;
  integer = integer ^ 1;
  integer = ~integer;
  goto <bb 8>; [INV]

  <bb 7> :
  D.2359 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 8> :
  printf ("%d, %s\n", 1, "true");

  <bb 9> :
  D.2359 = integer + 1;

  <bb 10> :
<L8>:
  return D.2359;

}


